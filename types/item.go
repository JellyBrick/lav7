package types

import (
	"bytes"
	"io"

	"github.com/L7-MCPE/lav7/util/buffer"
	"github.com/minero/minero-go/proto/nbt"
)

// CreativeItems is a list of inventory items for creative mode players.
var CreativeItems = []Item{
	Item{ID: 4, Meta: 0},
	Item{ID: 98, Meta: 0},
	Item{ID: 98, Meta: 1},
	Item{ID: 98, Meta: 2},
	Item{ID: 98, Meta: 3},
	Item{ID: 48, Meta: 0},
	Item{ID: 5, Meta: 0},
	Item{ID: 5, Meta: 1},
	Item{ID: 5, Meta: 2},
	Item{ID: 5, Meta: 3},
	Item{ID: 5, Meta: 4},
	Item{ID: 5, Meta: 5},
	Item{ID: 45, Meta: 0},
	Item{ID: 1, Meta: 0},
	Item{ID: 1, Meta: 1},
	Item{ID: 1, Meta: 2},
	Item{ID: 1, Meta: 3},
	Item{ID: 1, Meta: 4},
	Item{ID: 1, Meta: 5},
	Item{ID: 1, Meta: 6},
	Item{ID: 3, Meta: 0},
	Item{ID: 243, Meta: 0},
	Item{ID: 2, Meta: 0},
	Item{ID: 110, Meta: 0},
	Item{ID: 82, Meta: 0},
	Item{ID: 172, Meta: 0},
	Item{ID: 159, Meta: 0},
	Item{ID: 159, Meta: 1},
	Item{ID: 159, Meta: 2},
	Item{ID: 159, Meta: 3},
	Item{ID: 159, Meta: 4},
	Item{ID: 159, Meta: 5},
	Item{ID: 159, Meta: 6},
	Item{ID: 159, Meta: 7},
	Item{ID: 159, Meta: 8},
	Item{ID: 159, Meta: 9},
	Item{ID: 159, Meta: 10},
	Item{ID: 159, Meta: 11},
	Item{ID: 159, Meta: 12},
	Item{ID: 159, Meta: 13},
	Item{ID: 159, Meta: 14},
	Item{ID: 159, Meta: 15},
	Item{ID: 24, Meta: 0},
	Item{ID: 24, Meta: 1},
	Item{ID: 24, Meta: 2},
	Item{ID: 12, Meta: 0},
	Item{ID: 12, Meta: 1},
	Item{ID: 13, Meta: 0},
	Item{ID: 17, Meta: 0},
	Item{ID: 17, Meta: 1},
	Item{ID: 17, Meta: 2},
	Item{ID: 17, Meta: 3},
	Item{ID: 162, Meta: 0},
	Item{ID: 162, Meta: 1},
	Item{ID: 112, Meta: 0},
	Item{ID: 87, Meta: 0},
	Item{ID: 88, Meta: 0},
	Item{ID: 7, Meta: 0},
	Item{ID: 67, Meta: 0},
	Item{ID: 53, Meta: 0},
	Item{ID: 134, Meta: 0},
	Item{ID: 135, Meta: 0},
	Item{ID: 136, Meta: 0},
	Item{ID: 163, Meta: 0},
	Item{ID: 164, Meta: 0},
	Item{ID: 108, Meta: 0},
	Item{ID: 128, Meta: 0},
	Item{ID: 109, Meta: 0},
	Item{ID: 114, Meta: 0},
	Item{ID: 156, Meta: 0},
	Item{ID: 44, Meta: 0},
	Item{ID: 44, Meta: 1},
	Item{ID: 158, Meta: 0},
	Item{ID: 158, Meta: 1},
	Item{ID: 158, Meta: 2},
	Item{ID: 158, Meta: 3},
	Item{ID: 158, Meta: 4},
	Item{ID: 158, Meta: 5},
	Item{ID: 44, Meta: 3},
	Item{ID: 44, Meta: 4},
	Item{ID: 44, Meta: 5},
	Item{ID: 44, Meta: 6},
	Item{ID: 44, Meta: 7},
	Item{ID: 155, Meta: 0},
	Item{ID: 155, Meta: 1},
	Item{ID: 155, Meta: 2},
	Item{ID: 16, Meta: 0},
	Item{ID: 15, Meta: 0},
	Item{ID: 14, Meta: 0},
	Item{ID: 56, Meta: 0},
	Item{ID: 21, Meta: 0},
	Item{ID: 73, Meta: 0},
	Item{ID: 129, Meta: 0},
	Item{ID: 49, Meta: 0},
	Item{ID: 79, Meta: 0},
	Item{ID: 174, Meta: 0},
	Item{ID: 80, Meta: 0},
	Item{ID: 121, Meta: 0},
	Item{ID: 139, Meta: 0},
	Item{ID: 139, Meta: 1},
	Item{ID: 111, Meta: 0},
	Item{ID: 41, Meta: 0},
	Item{ID: 42, Meta: 0},
	Item{ID: 57, Meta: 0},
	Item{ID: 22, Meta: 0},
	Item{ID: 173, Meta: 0},
	Item{ID: 133, Meta: 0},
	Item{ID: 152, Meta: 0},
	Item{ID: 78, Meta: 0},
	Item{ID: 20, Meta: 0},
	Item{ID: 89, Meta: 0},
	Item{ID: 106, Meta: 0},
	Item{ID: 65, Meta: 0},
	Item{ID: 19, Meta: 0},
	Item{ID: 102, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 330, Meta: 0},
	Item{ID: 96, Meta: 0},
	Item{ID: 167, Meta: 0},
	Item{ID: 85, Meta: 0},
	Item{ID: 85, Meta: 1},
	Item{ID: 85, Meta: 2},
	Item{ID: 85, Meta: 3},
	Item{ID: 85, Meta: 4},
	Item{ID: 85, Meta: 5},
	Item{ID: 113, Meta: 0},
	Item{ID: 107, Meta: 0},
	Item{ID: 183, Meta: 0},
	Item{ID: 184, Meta: 0},
	Item{ID: 185, Meta: 0},
	Item{ID: 187, Meta: 0},
	Item{ID: 186, Meta: 0},
	Item{ID: 101, Meta: 0},
	Item{ID: 355, Meta: 0},
	Item{ID: 47, Meta: 0},
	Item{ID: 321, Meta: 0},
	Item{ID: 58, Meta: 0},
	Item{ID: 245, Meta: 0},
	Item{ID: 54, Meta: 0},
	Item{ID: 54, Meta: 0},
	Item{ID: 61, Meta: 0},
	Item{ID: 379, Meta: 0},
	Item{ID: 120, Meta: 0},
	Item{ID: 145, Meta: 0},
	Item{ID: 145, Meta: 4},
	Item{ID: 145, Meta: 8},
	Item{ID: 37, Meta: 0},
	Item{ID: 38, Meta: 0},
	Item{ID: 38, Meta: 1},
	Item{ID: 38, Meta: 2},
	Item{ID: 38, Meta: 3},
	Item{ID: 38, Meta: 4},
	Item{ID: 38, Meta: 5},
	Item{ID: 38, Meta: 6},
	Item{ID: 38, Meta: 7},
	Item{ID: 38, Meta: 8},
	Item{ID: 39, Meta: 0},
	Item{ID: 40, Meta: 0},
	Item{ID: 81, Meta: 0},
	Item{ID: 103, Meta: 0},
	Item{ID: 86, Meta: 0},
	Item{ID: 91, Meta: 0},
	Item{ID: 30, Meta: 0},
	Item{ID: 170, Meta: 0},
	Item{ID: 31, Meta: 1},
	Item{ID: 31, Meta: 2},
	Item{ID: 32, Meta: 0},
	Item{ID: 6, Meta: 0},
	Item{ID: 6, Meta: 1},
	Item{ID: 6, Meta: 2},
	Item{ID: 6, Meta: 3},
	Item{ID: 6, Meta: 4},
	Item{ID: 6, Meta: 5},
	Item{ID: 18, Meta: 0},
	Item{ID: 18, Meta: 1},
	Item{ID: 18, Meta: 2},
	Item{ID: 18, Meta: 3},
	Item{ID: 161, Meta: 0},
	Item{ID: 161, Meta: 1},
	Item{ID: 354, Meta: 0},
	Item{ID: 323, Meta: 0},
	Item{ID: 390, Meta: 0},
	Item{ID: 52, Meta: 0},
	Item{ID: 116, Meta: 0},
	Item{ID: 35, Meta: 0},
	Item{ID: 35, Meta: 7},
	Item{ID: 35, Meta: 6},
	Item{ID: 35, Meta: 5},
	Item{ID: 35, Meta: 4},
	Item{ID: 35, Meta: 3},
	Item{ID: 35, Meta: 2},
	Item{ID: 35, Meta: 1},
	Item{ID: 35, Meta: 15},
	Item{ID: 35, Meta: 14},
	Item{ID: 35, Meta: 13},
	Item{ID: 35, Meta: 12},
	Item{ID: 35, Meta: 11},
	Item{ID: 35, Meta: 10},
	Item{ID: 35, Meta: 9},
	Item{ID: 35, Meta: 8},
	Item{ID: 171, Meta: 0},
	Item{ID: 171, Meta: 7},
	Item{ID: 171, Meta: 6},
	Item{ID: 171, Meta: 5},
	Item{ID: 171, Meta: 4},
	Item{ID: 171, Meta: 3},
	Item{ID: 171, Meta: 2},
	Item{ID: 171, Meta: 1},
	Item{ID: 171, Meta: 15},
	Item{ID: 171, Meta: 14},
	Item{ID: 171, Meta: 13},
	Item{ID: 171, Meta: 12},
	Item{ID: 171, Meta: 11},
	Item{ID: 171, Meta: 10},
	Item{ID: 171, Meta: 9},
	Item{ID: 171, Meta: 8},
	Item{ID: 139, Meta: 0},
	Item{ID: 139, Meta: 1},
	Item{ID: 111, Meta: 0},
	Item{ID: 41, Meta: 0},
	Item{ID: 42, Meta: 0},
	Item{ID: 57, Meta: 0},
	Item{ID: 22, Meta: 0},
	Item{ID: 173, Meta: 0},
	Item{ID: 133, Meta: 0},
	Item{ID: 152, Meta: 0},
	Item{ID: 78, Meta: 0},
	Item{ID: 20, Meta: 0},
	Item{ID: 89, Meta: 0},
	Item{ID: 106, Meta: 0},
	Item{ID: 65, Meta: 0},
	Item{ID: 19, Meta: 0},
	Item{ID: 102, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 324, Meta: 0},
	Item{ID: 330, Meta: 0},
	Item{ID: 96, Meta: 0},
	Item{ID: 167, Meta: 0},
	Item{ID: 85, Meta: 0},
	Item{ID: 85, Meta: 1},
	Item{ID: 85, Meta: 2},
	Item{ID: 85, Meta: 3},
	Item{ID: 85, Meta: 4},
	Item{ID: 85, Meta: 5},
	Item{ID: 113, Meta: 0},
	Item{ID: 107, Meta: 0},
	Item{ID: 183, Meta: 0},
	Item{ID: 184, Meta: 0},
	Item{ID: 185, Meta: 0},
	Item{ID: 187, Meta: 0},
	Item{ID: 186, Meta: 0},
	Item{ID: 101, Meta: 0},
	Item{ID: 355, Meta: 0},
	Item{ID: 47, Meta: 0},
	Item{ID: 321, Meta: 0},
	Item{ID: 58, Meta: 0},
	Item{ID: 245, Meta: 0},
	Item{ID: 54, Meta: 0},
	Item{ID: 54, Meta: 0},
	Item{ID: 61, Meta: 0},
	Item{ID: 379, Meta: 0},
	Item{ID: 120, Meta: 0},
	Item{ID: 145, Meta: 0},
	Item{ID: 145, Meta: 4},
	Item{ID: 145, Meta: 8},
	Item{ID: 37, Meta: 0},
	Item{ID: 38, Meta: 0},
	Item{ID: 38, Meta: 1},
	Item{ID: 38, Meta: 2},
	Item{ID: 38, Meta: 3},
	Item{ID: 38, Meta: 4},
	Item{ID: 38, Meta: 5},
	Item{ID: 38, Meta: 6},
	Item{ID: 38, Meta: 7},
	Item{ID: 38, Meta: 8},
	Item{ID: 39, Meta: 0},
	Item{ID: 40, Meta: 0},
	Item{ID: 81, Meta: 0},
	Item{ID: 103, Meta: 0},
	Item{ID: 86, Meta: 0},
	Item{ID: 91, Meta: 0},
	Item{ID: 30, Meta: 0},
	Item{ID: 170, Meta: 0},
	Item{ID: 31, Meta: 1},
	Item{ID: 31, Meta: 2},
	Item{ID: 32, Meta: 0},
	Item{ID: 6, Meta: 0},
	Item{ID: 6, Meta: 1},
	Item{ID: 6, Meta: 2},
	Item{ID: 6, Meta: 3},
	Item{ID: 6, Meta: 4},
	Item{ID: 6, Meta: 5},
	Item{ID: 18, Meta: 0},
	Item{ID: 18, Meta: 1},
	Item{ID: 18, Meta: 2},
	Item{ID: 18, Meta: 3},
	Item{ID: 161, Meta: 0},
	Item{ID: 161, Meta: 1},
	Item{ID: 354, Meta: 0},
	Item{ID: 323, Meta: 0},
	Item{ID: 390, Meta: 0},
	Item{ID: 52, Meta: 0},
	Item{ID: 116, Meta: 0},
	Item{ID: 35, Meta: 0},
	Item{ID: 35, Meta: 7},
	Item{ID: 35, Meta: 6},
	Item{ID: 35, Meta: 5},
	Item{ID: 35, Meta: 4},
	Item{ID: 35, Meta: 3},
	Item{ID: 35, Meta: 2},
	Item{ID: 35, Meta: 1},
	Item{ID: 35, Meta: 15},
	Item{ID: 35, Meta: 14},
	Item{ID: 35, Meta: 13},
	Item{ID: 35, Meta: 12},
	Item{ID: 35, Meta: 11},
	Item{ID: 35, Meta: 10},
	Item{ID: 35, Meta: 9},
	Item{ID: 35, Meta: 8},
	Item{ID: 171, Meta: 0},
	Item{ID: 171, Meta: 7},
	Item{ID: 171, Meta: 6},
	Item{ID: 171, Meta: 5},
	Item{ID: 171, Meta: 4},
	Item{ID: 171, Meta: 3},
	Item{ID: 171, Meta: 2},
	Item{ID: 171, Meta: 1},
	Item{ID: 171, Meta: 15},
	Item{ID: 171, Meta: 14},
	Item{ID: 171, Meta: 13},
	Item{ID: 171, Meta: 12},
	Item{ID: 171, Meta: 11},
	Item{ID: 171, Meta: 10},
	Item{ID: 171, Meta: 9},
	Item{ID: 171, Meta: 8},
	Item{ID: 50, Meta: 0},
	Item{ID: 325, Meta: 0},
	Item{ID: 325, Meta: 1},
	Item{ID: 325, Meta: 8},
	Item{ID: 325, Meta: 10},
	Item{ID: 46, Meta: 0},
	Item{ID: 331, Meta: 0},
	Item{ID: 261, Meta: 0},
	Item{ID: 346, Meta: 0},
	Item{ID: 259, Meta: 0},
	Item{ID: 359, Meta: 0},
	Item{ID: 347, Meta: 0},
	Item{ID: 345, Meta: 0},
	Item{ID: 328, Meta: 0},
	Item{ID: 383, Meta: 15},
	Item{ID: 383, Meta: 32},
	Item{ID: 383, Meta: 17},
	Item{ID: 268, Meta: 0},
	Item{ID: 290, Meta: 0},
	Item{ID: 269, Meta: 0},
	Item{ID: 270, Meta: 0},
	Item{ID: 271, Meta: 0},
	Item{ID: 272, Meta: 0},
	Item{ID: 291, Meta: 0},
	Item{ID: 273, Meta: 0},
	Item{ID: 274, Meta: 0},
	Item{ID: 275, Meta: 0},
	Item{ID: 267, Meta: 0},
	Item{ID: 292, Meta: 0},
	Item{ID: 256, Meta: 0},
	Item{ID: 257, Meta: 0},
	Item{ID: 258, Meta: 0},
	Item{ID: 276, Meta: 0},
	Item{ID: 293, Meta: 0},
	Item{ID: 277, Meta: 0},
	Item{ID: 278, Meta: 0},
	Item{ID: 279, Meta: 0},
	Item{ID: 283, Meta: 0},
	Item{ID: 294, Meta: 0},
	Item{ID: 284, Meta: 0},
	Item{ID: 285, Meta: 0},
	Item{ID: 286, Meta: 0},
	Item{ID: 298, Meta: 0},
	Item{ID: 299, Meta: 0},
	Item{ID: 300, Meta: 0},
	Item{ID: 301, Meta: 0},
	Item{ID: 302, Meta: 0},
	Item{ID: 303, Meta: 0},
	Item{ID: 304, Meta: 0},
	Item{ID: 305, Meta: 0},
	Item{ID: 306, Meta: 0},
	Item{ID: 307, Meta: 0},
	Item{ID: 308, Meta: 0},
	Item{ID: 309, Meta: 0},
	Item{ID: 310, Meta: 0},
	Item{ID: 311, Meta: 0},
	Item{ID: 312, Meta: 0},
	Item{ID: 313, Meta: 0},
	Item{ID: 314, Meta: 0},
	Item{ID: 315, Meta: 0},
	Item{ID: 316, Meta: 0},
	Item{ID: 317, Meta: 0},
	Item{ID: 332, Meta: 0},
	Item{ID: 263, Meta: 0},
	Item{ID: 263, Meta: 1},
	Item{ID: 264, Meta: 0},
	Item{ID: 265, Meta: 0},
	Item{ID: 266, Meta: 0},
	Item{ID: 388, Meta: 0},
	Item{ID: 280, Meta: 0},
	Item{ID: 281, Meta: 0},
	Item{ID: 287, Meta: 0},
	Item{ID: 288, Meta: 0},
	Item{ID: 318, Meta: 0},
	Item{ID: 334, Meta: 0},
	Item{ID: 337, Meta: 0},
	Item{ID: 353, Meta: 0},
	Item{ID: 406, Meta: 0},
	Item{ID: 339, Meta: 0},
	Item{ID: 340, Meta: 0},
	Item{ID: 262, Meta: 0},
	Item{ID: 352, Meta: 0},
	Item{ID: 338, Meta: 0},
	Item{ID: 296, Meta: 0},
	Item{ID: 295, Meta: 0},
	Item{ID: 361, Meta: 0},
	Item{ID: 362, Meta: 0},
	Item{ID: 458, Meta: 0},
	Item{ID: 344, Meta: 0},
	Item{ID: 260, Meta: 0},
	Item{ID: 322, Meta: 0},
	Item{ID: 349, Meta: 0},
	Item{ID: 349, Meta: 1},
	Item{ID: 349, Meta: 2},
	Item{ID: 349, Meta: 3},
	Item{ID: 350, Meta: 0},
	Item{ID: 350, Meta: 1},
	Item{ID: 297, Meta: 0},
	Item{ID: 319, Meta: 0},
	Item{ID: 320, Meta: 0},
	Item{ID: 365, Meta: 0},
	Item{ID: 366, Meta: 0},
	Item{ID: 363, Meta: 0},
	Item{ID: 364, Meta: 0},
	Item{ID: 360, Meta: 0},
	Item{ID: 391, Meta: 0},
	Item{ID: 392, Meta: 0},
	Item{ID: 393, Meta: 0},
	Item{ID: 357, Meta: 0},
	Item{ID: 400, Meta: 0},
	Item{ID: 371, Meta: 0},
	Item{ID: 341, Meta: 0},
	Item{ID: 289, Meta: 0},
	Item{ID: 348, Meta: 0},
	Item{ID: 351, Meta: 0},
	Item{ID: 351, Meta: 7},
	Item{ID: 351, Meta: 6},
	Item{ID: 351, Meta: 5},
	Item{ID: 351, Meta: 4},
	Item{ID: 351, Meta: 3},
	Item{ID: 351, Meta: 2},
	Item{ID: 351, Meta: 1},
	Item{ID: 351, Meta: 15},
	Item{ID: 351, Meta: 14},
	Item{ID: 351, Meta: 13},
	Item{ID: 351, Meta: 12},
	Item{ID: 351, Meta: 11},
	Item{ID: 351, Meta: 10},
	Item{ID: 351, Meta: 9},
	Item{ID: 351, Meta: 8},
}

// Item contains item data for each container slots.
type Item struct {
	ID       ID
	Meta     uint16
	Amount   byte
	Compound *nbt.Compound
}

// Read reads item data from io.Reader interface.
func (i *Item) Read(buf io.Reader) {
	i.ID = ID(buffer.ReadShort(buf))
	if i.ID == 0 {
		return
	}
	i.Amount = buffer.ReadByte(buf)
	i.Meta = buffer.ReadShort(buf)
	length := uint32(buffer.ReadLShort(buf))
	if length > 0 {
		b, _ := buffer.Read(buf, int(length))
		compound := bytes.NewBuffer(b)
		i.Compound = new(nbt.Compound)
		i.Compound.ReadFrom(compound)
	}
}

// Write returns byte slice with item data.
func (i Item) Write() []byte {
	if i.ID == 0 {
		return []byte{0, 0}
	}
	buf := new(bytes.Buffer)
	buffer.WriteShort(buf, uint16(i.ID))
	buffer.WriteByte(buf, i.Amount)
	buffer.WriteShort(buf, i.Meta)
	compound := new(bytes.Buffer)
	i.Compound.WriteTo(compound)
	buffer.WriteLShort(buf, uint16(compound.Len()))
	buf.Write(compound.Bytes())
	return buf.Bytes()
}

// Block converts the item to block struct.
// If ID is not a block ID, it panics.
func (i Item) Block() Block {
	return Block{
		ID:   i.ID.Block(),
		Meta: byte(i.Meta),
	}
}
